syntax = "proto3";

option go_package = "./pb";

package pb;

// model
// req,resp
message RegisterReq {
    string userName = 1;
    string password = 2;
    string realName = 3;
    int64 idType = 4;
    string idCard = 5;
    string phone = 6;
    string mail = 7;
    int64 userType = 8;
    int64 verifyState = 9;
    string postCode = 10;
    string address = 11;
    string region = 12;
    string telephone = 13;
}
message RegisterResp {
  string username = 1;
  string realName =2;
  string phone = 3;
}

message LoginReq {
    string usernameOrMailOrPhone = 1;
    string password = 2;
}

message LoginResp {
     string userId = 1;
     string username = 2;
     string realName = 3;
     string accessToken = 4;
}
message GenerateTokenReq {
  int64 userId = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}
message CheckLoginReq {
  string accessToken = 1;
}
message LogoutReq {
  string accessToken = 1;
}
message voidResp {
}
message hasUsernameReq {
  string username = 1;
}
message hasUsernameResp {
  bool has = 1;
}

message UserNameReq{
  string username = 1;
}
message UserNameResp {
  string username = 1;
  string realName = 2;
  string region = 3;
  int64 idType = 4;
  string idCard = 5;
   string phone = 6;
   string telephone = 7;
   string mail = 8;
   int64 userType = 9;
   int64 verifyStatus=10;
   string postCode = 11;
   string address = 12;
}

message ActualUserNameResp {
   string username = 1;
   string realName = 2;
   string region = 3;
   int64 idType = 4;
   string idCard = 5;
   string phone =6;
   string telephone = 7;
   string mail =8;
   int64 userType =9;
   int64 verifyStatus =10;
   string postCode =11;
   string address =12;
}
message UpdateUserInfoReq {
  string id = 1;
  string username = 2;
  string mail = 3;
  int64 userType = 4;
  string postCode =5;
  string address =6;
}

message UpdateUserInfoResp {
}

message DeletionReq {
  string username = 1;
  int64 id = 2;
}

message DeletionResp {
}


message ListPassengerQueryByUsernameReq {
  string username = 1;
}

message ListPassengerQueryByUsernameResp {
    repeated PassengerRespDTO list = 1;
}

message PassengerRespDTO {
   string id =1;
   string username=2;
   string realName=3;
   int64 idType=4;
   string idCard=5;
   string actualIdCard=6;
   int64 discountType=7;
   string phone=8;
   string actualPhone=9;
   string createDate=10; // Date
   int64 verifyStatus=11;
}


message ListPassengerQueryByIdsReq {
  string username = 1;
  repeated int64  ids = 2;
}
message ListPassengerQueryByIdsResp {
  repeated ListPassengerQueryByIds list = 1;
}

message ListPassengerQueryByIds {
  string id =1;
  string username=2;
  string realName=3;
  int64 idType=4;
  string idCard=5;
  int64 discountType=6;
  string phone=7;
  string createDate=8;
  int64 verifyStatus=9;
}

message SavePassengerReq{

   string id = 1;

  /**
   * 真实姓名
   */
   string realName = 2;

  /**
   * 证件类型
   */
   int64 idType = 3;

  /**
   * 证件号码
   */
   string idCard = 4;

  /**
   * 优惠类型
   */
   int64 discountType =5;

  /**
   * 手机号
   */
   string phone = 6;
}
message SavePassengerResp {
}

message RemovePassengerReq {
  int64 id = 1;
}
message SelectPassengerReq {
  string username = 1;
  string passengerId = 2;
}
message PassengerDO {
  /**
   * id
   */
   int64 id =1;

  /**
   * 用户名
   */
   string username=2;

  /**
   * 真实姓名
   */
   string realName=3;

  /**
   * 证件类型
   */
   int64 idType=4;

  /**
   * 证件号码
   */
   string idCard=5;

  /**
   * 优惠类型
   */
   int64 discountType=6;

  /**
   * 手机号
   */
   string phone =7;

  /**
   * 添加日期
   */
   int64 createDate=8;

  /**
   * 审核状态
   */
   int64 verifyStatus=9;

  /**
 * 创建时间
 */
   int64 createTime=10;

  /**
   * 修改时间
   */
   int64 updateTime=11;

  /**
   * 删除标志
   */
   int64 delFlag=12;
}
// service
service user {

    rpc register(RegisterReq) returns (RegisterResp);
    rpc hasUsername(hasUsernameReq) returns (hasUsernameResp);
    rpc queryUserByUsername(UserNameReq) returns (UserNameResp);
    rpc queryActualUserByUsername(UserNameReq) returns (ActualUserNameResp);
    rpc updateUserInfo(UpdateUserInfoReq) returns (UpdateUserInfoResp);
    rpc deletion(DeletionReq) returns (DeletionResp);

    rpc login(LoginReq) returns (LoginResp);
    rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp);
//    rpc parseToken(ParseTokenReq) returns(ParseTokenResp);
    rpc checkLogin(CheckLoginReq) returns (LoginResp);
    rpc logout(LogoutReq) returns (voidResp);

    rpc listPassengerQueryByUsername(ListPassengerQueryByUsernameReq) returns(ListPassengerQueryByUsernameResp);
    rpc listPassengerQueryByIds(ListPassengerQueryByIdsReq) returns(ListPassengerQueryByIdsResp);
    rpc savePassenger(SavePassengerReq) returns (SavePassengerResp);
    rpc updatePassenger(SavePassengerReq) returns (SavePassengerResp);
    rpc removePassenger(RemovePassengerReq) returns(SavePassengerReq);
    rpc selectPassenger(SelectPassengerReq) returns(PassengerDO);
}

