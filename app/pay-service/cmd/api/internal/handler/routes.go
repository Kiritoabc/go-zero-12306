// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	pay "go-zero-12306/app/pay-service/cmd/api/internal/handler/pay"
	payCallback "go-zero-12306/app/pay-service/cmd/api/internal/handler/payCallback"
	refund "go-zero-12306/app/pay-service/cmd/api/internal/handler/refund"
	"go-zero-12306/app/pay-service/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/pay/create",
				Handler: pay.PayHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/pay/query/order-sn",
				Handler: pay.GetPayInfoByOrderSnHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/pay/query/pay-sn",
				Handler: pay.GetPayInfoByPaySnHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/refund",
				Handler: pay.RefundHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/pay-service"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/alipay",
				Handler: payCallback.CallbackAlipayHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/pay-service/callback"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/path",
				Handler: refund.CommonRefundHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/pay-service/common"),
	)
}
