// Code generated by goctl. DO NOT EDIT.
// Source: ticket.proto

package server

import (
	"context"

	"go-zero-12306/app/ticket-service/cmd/rpc/internal/logic"
	"go-zero-12306/app/ticket-service/cmd/rpc/internal/svc"
	"go-zero-12306/app/ticket-service/cmd/rpc/pb"
)

type TicketServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTicketServer
}

func NewTicketServer(svcCtx *svc.ServiceContext) *TicketServer {
	return &TicketServer{
		svcCtx: svcCtx,
	}
}

func (s *TicketServer) ListTrainStationQuery(ctx context.Context, in *pb.ListTrainStationQueryReq) (*pb.ListTrainStationQueryResp, error) {
	l := logic.NewListTrainStationQueryLogic(ctx, s.svcCtx)
	return l.ListTrainStationQuery(in)
}

func (s *TicketServer) ListRegionStation(ctx context.Context, in *pb.ListRegionStationReq) (*pb.ListRegionStationResp, error) {
	l := logic.NewListRegionStationLogic(ctx, s.svcCtx)
	return l.ListRegionStation(in)
}

func (s *TicketServer) ListAllStation(ctx context.Context, in *pb.ListAllStationReq) (*pb.ListAllStationResp, error) {
	l := logic.NewListAllStationLogic(ctx, s.svcCtx)
	return l.ListAllStation(in)
}

func (s *TicketServer) RegionTrainStationJob(ctx context.Context, in *pb.RegionTrainStationJobReq) (*pb.RegionTrainStationJobResp, error) {
	l := logic.NewRegionTrainStationJobLogic(ctx, s.svcCtx)
	return l.RegionTrainStationJob(in)
}

func (s *TicketServer) TrainStationDetailJob(ctx context.Context, in *pb.TrainStationDetailJobReq) (*pb.TrainStationDetailJobResp, error) {
	l := logic.NewTrainStationDetailJobLogic(ctx, s.svcCtx)
	return l.TrainStationDetailJob(in)
}

// TODO: TicketControllerRpc
func (s *TicketServer) PageListTicketQuery(ctx context.Context, in *pb.PageListTicketQueryReq) (*pb.PageListTicketQueryResp, error) {
	l := logic.NewPageListTicketQueryLogic(ctx, s.svcCtx)
	return l.PageListTicketQuery(in)
}

func (s *TicketServer) PurchaseTickets(ctx context.Context, in *pb.PurchaseTicketsReq) (*pb.PurchaseTicketsResp, error) {
	l := logic.NewPurchaseTicketsLogic(ctx, s.svcCtx)
	return l.PurchaseTickets(in)
}

func (s *TicketServer) PurchaseTicketsV2(ctx context.Context, in *pb.PurchaseTicketsReq) (*pb.PurchaseTicketsResp, error) {
	l := logic.NewPurchaseTicketsV2Logic(ctx, s.svcCtx)
	return l.PurchaseTicketsV2(in)
}

func (s *TicketServer) CancelTicketOrder(ctx context.Context, in *pb.CancelTicketOrderReq) (*pb.CancelTicketOrderResp, error) {
	l := logic.NewCancelTicketOrderLogic(ctx, s.svcCtx)
	return l.CancelTicketOrder(in)
}

func (s *TicketServer) GetPayInfo(ctx context.Context, in *pb.GetPayInfoReq) (*pb.GetPayInfoResp, error) {
	l := logic.NewGetPayInfoLogic(ctx, s.svcCtx)
	return l.GetPayInfo(in)
}

func (s *TicketServer) CommonTicketRefund(ctx context.Context, in *pb.CommonTicketRefundReq) (*pb.CommonTicketRefundResp, error) {
	l := logic.NewCommonTicketRefundLogic(ctx, s.svcCtx)
	return l.CommonTicketRefund(in)
}
