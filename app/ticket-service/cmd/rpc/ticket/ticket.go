// Code generated by goctl. DO NOT EDIT.
// Source: ticket.proto

package ticket

import (
	"context"

	"go-zero-12306/app/ticket-service/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ListAllStationReq         = pb.ListAllStationReq
	ListAllStationResp        = pb.ListAllStationResp
	ListRegionStationReq      = pb.ListRegionStationReq
	ListRegionStationResp     = pb.ListRegionStationResp
	ListTrainStationQueryReq  = pb.ListTrainStationQueryReq
	ListTrainStationQueryResp = pb.ListTrainStationQueryResp
	RegionStationQueryRespDTO = pb.RegionStationQueryRespDTO
	RegionTrainStationJobReq  = pb.RegionTrainStationJobReq
	RegionTrainStationJobResp = pb.RegionTrainStationJobResp
	StationQueryRespDTO       = pb.StationQueryRespDTO
	TrainStationQueryRespDTO  = pb.TrainStationQueryRespDTO

	Ticket interface {
		//
		ListTrainStationQuery(ctx context.Context, in *ListTrainStationQueryReq, opts ...grpc.CallOption) (*ListTrainStationQueryResp, error)
		ListRegionStation(ctx context.Context, in *ListRegionStationReq, opts ...grpc.CallOption) (*ListRegionStationResp, error)
		ListAllStation(ctx context.Context, in *ListAllStationReq, opts ...grpc.CallOption) (*ListAllStationResp, error)
		RegionTrainStationJob(ctx context.Context, in *RegionTrainStationJobReq, opts ...grpc.CallOption) (*RegionTrainStationJobResp, error)
	}

	defaultTicket struct {
		cli zrpc.Client
	}
)

func NewTicket(cli zrpc.Client) Ticket {
	return &defaultTicket{
		cli: cli,
	}
}

func (m *defaultTicket) ListTrainStationQuery(ctx context.Context, in *ListTrainStationQueryReq, opts ...grpc.CallOption) (*ListTrainStationQueryResp, error) {
	client := pb.NewTicketClient(m.cli.Conn())
	return client.ListTrainStationQuery(ctx, in, opts...)
}

func (m *defaultTicket) ListRegionStation(ctx context.Context, in *ListRegionStationReq, opts ...grpc.CallOption) (*ListRegionStationResp, error) {
	client := pb.NewTicketClient(m.cli.Conn())
	return client.ListRegionStation(ctx, in, opts...)
}

func (m *defaultTicket) ListAllStation(ctx context.Context, in *ListAllStationReq, opts ...grpc.CallOption) (*ListAllStationResp, error) {
	client := pb.NewTicketClient(m.cli.Conn())
	return client.ListAllStation(ctx, in, opts...)
}

func (m *defaultTicket) RegionTrainStationJob(ctx context.Context, in *RegionTrainStationJobReq, opts ...grpc.CallOption) (*RegionTrainStationJobResp, error) {
	client := pb.NewTicketClient(m.cli.Conn())
	return client.RegionTrainStationJob(ctx, in, opts...)
}
