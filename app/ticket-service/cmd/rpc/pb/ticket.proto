syntax = "proto3";


option go_package = "./pb";

package pb;

message ListTrainStationQueryReq {
  string trainId = 1;
}

message ListTrainStationQueryResp {
  repeated TrainStationQueryRespDTO trainStationQueryRespDTO = 1;
}

message TrainStationQueryRespDTO {
  /**
 * 站序
 */
   string sequence=1;

  /**
   * 站名
   */
   string departure=2;

  /**
   * 到站时间
   */
   string arrivalTime=3;

  /**
   * 出发时间
   */
   string departureTime=4;

  /**
   * 停留时间
   */
   int64 stopoverTime=5;
}

message ListRegionStationReq {
  int64 queryType = 1;
  string name =2;
}

message ListRegionStationResp {
  repeated TrainStationQueryRespDTO trainStationQueryRespDTO = 1;
}
message RegionStationQueryRespDTO {
  /**
  * 名称
  */
  string name = 1;
  /**
   * 地区编码
   */
  string code = 2;
  // 拼音
  string spell =3;
}

message ListAllStationReq {

}

message ListAllStationResp {
  repeated StationQueryRespDTO stationQueryRespDTO = 1;
}
message StationQueryRespDTO {
  /**
* 名称
*/
  string name = 1;
  /**
   * 地区编码
   */
  string code = 2;
  /**
    * 拼音
   */
  string spell =3;
  /**
   * 城市名称
   */
  string regionName =4;

}

message RegionTrainStationJobReq {
}

message RegionTrainStationJobResp {
}


//  goctl rpc protoc ticket.proto --go_out=../ --go-grpc_out=../  --zrpc_out=../ --style=goZero
// service
service ticket {
  //
  rpc listTrainStationQuery(ListTrainStationQueryReq) returns (ListTrainStationQueryResp);
  /**
    * 查询车站&城市站点集合信息
    */
  rpc listRegionStation(ListRegionStationReq) returns (ListRegionStationResp);
  /**
    * 查询车站站点集合信息
    */
  rpc listAllStation(ListAllStationReq) returns (ListAllStationResp);

  /**
   * 定时任务prc
   */
  rpc regionTrainStationJob(RegionTrainStationJobReq) returns (RegionTrainStationJobResp);

}